security:
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            #- ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # -> custom firewall for the admin area of the URL
        admin:
            pattern:      /(en|fr|de)/admin(.*)
            form_login:
                provider:       fos_userbundle
#                login_path:     /admin/login
                login_path:     sonata_user_admin_security_login # changed
                use_forward:    false
#                check_path:     /admin/login_check
                check_path:     sonata_user_admin_security_check # changed
                failure_path:   null
            logout:
#                path:           /admin/logout
                path:           sonata_user_admin_security_logout # changed
            anonymous:    true
        # -> end custom configuration

        # defaut login area for standard users
        main:
            pattern:      .*
            form_login:
                provider:       fos_userbundle
                csrf_provider:  form.csrf_provider
#                login_path:     /login
                login_path:     fos_user_security_login # changed
                use_forward:    false
#                check_path:     /login_check
                check_path:     fos_user_security_check # changed
                failure_path:   null
            logout:       true
            anonymous:    true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(en|fr|de)/login$, role: IS_AUTHENTICATED_ANONYMOUSLY } # changed

        # -> custom access control for the admin area of the URL
        - { path: ^/(en|fr|de)/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(en|fr|de)/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(en|fr|de)/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^/(en|fr|de)/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(en|fr|de)/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/(en|fr|de)/admin, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/(en|fr|de)/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

    acl:
        connection: default

    access_decision_manager:
        # Strategy can be: affirmative, unanimous or consensus
        strategy: unanimous

parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
